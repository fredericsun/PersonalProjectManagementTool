{"version":3,"sources":["securityUtils/setJWTToken.js","actions/securityActions.js","actions/types.js","components/layout/Header.js","actions/projectActions.js","components/project/ProjectItem.js","components/project/AddProject.js","components/project/UpdateProjects.js","components/Dashboard.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/projectBoard/projectTasks/AddProjectTask.js","actions/backlogActions.js","components/projectBoard/projectTasks/UpdateProjectTask.js","components/projectBoard/projectTasks/ProjectTaskItem.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/layout/Landing.js","components/user/Register.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","type","payload","Header","this","props","window","location","fref","headerLinks","security","validToken","user","initials","fullName","split","AppBar","position","Toolbar","IconButton","component","Link","to","edge","color","aria-label","fontSize","Typography","variant","align","style","flex","title","Button","href","Avatar","charAt","onClick","bind","Component","connect","state","createProject","project","closeDialog","history","a","console","log","post","push","reload","response","data","classes","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","padding","display","overflow","flexDirection","ProjectItem","onDeleteClick","id","deleteProject","onOpenUpdate","Fragment","Paper","className","Grid","container","alignItems","item","xs","projectIdentifier","md","inline","projectName","description","List","aria-labelledby","ListItem","button","ListItemIcon","ListItemText","primary","confirm","withConfirm","delete","marginTop","form","submit","margin","AddProject","startDateChange","date","setState","startDate","endDateChange","endDate","onChange","e","target","name","value","onSubmit","preventDefault","newProject","projectId","start_date","end_date","onCloseDialog","Date","errors","nextProps","Container","CssBaseline","utils","DateFnsUtils","TextField","required","fullWidth","label","autoFocus","autoComplete","error","multiline","rows","sm","format","KeyboardButtonProps","justify","UpdateProject","updateProject","getProject","targetId","disabled","get","res","paddingTop","paddingBottom","Dashboard","handleCreateOpen","openCreate","handleCreateClose","handleUpdateOpen","updateId","openUpdate","handleUpdateClose","getProjects","projects","Box","p","m","bgcolor","Fab","map","key","Dialog","open","onClose","DialogTitle","DialogContent","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","formControl","minWidth","selectEmpty","AddProjectTask","dueDateChange","dueDate","newTask","summary","acceptanceCriteria","priority","status","addProjectTask","FormControl","InputLabel","shrink","Select","labelId","displayEmpty","MenuItem","backlog_id","UpdateProjectTask","create_At","updateProjectTask","getProjectTask","pt_id","patch","card","media","height","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","ProjectTaskItem","expanded","handleExpandClick","deleteProjectTask","priorityString","headerColor","styles","cardHeader","Card","CardHeader","titleTypographyProps","subheader","subheaderTypographyProps","CardContent","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","elevation","fontWeight","flexGrow","textAlign","text","secondary","ProjectBoard","match","params","getBacklog","BoardContent","projectNotFound","Alert","severity","boardAlgorithm","Copyright","getFullYear","Landing","username","password","LoginRequest","login","mt","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createNewUser","otherProps","render","jwtToken","decoded_jwtToken","currentTime","now","exp","App","exact","path","SignUp","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e5cc3e4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/securityActions\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.fref = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    let headerLinks;\n\n    if (validToken && user) {\n      const initials = user.fullName.split(\" \");\n      headerLinks = (\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              component={Link}\n              to={\"/dashboard\"}\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <HomeIcon fontSize=\"large\" />\n            </IconButton>\n            <Typography variant=\"h6\" align=\"left\" style={{ flex: 1 }}>\n              {this.props.title}\n            </Typography>\n            <Button href=\"/dashboard\" color=\"inherit\">\n              <Avatar>{initials[0].charAt(0) + initials[1].charAt(0)}</Avatar>\n            </Button>\n            <Button href=\"/\" color=\"inherit\" onClick={this.logout.bind(this)}>\n              Logout\n            </Button>\n          </Toolbar>\n        </AppBar>\n      );\n    } else {\n      headerLinks = (\n        <div>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <IconButton component={Link} to={\"/\"} color=\"inherit\">\n                <DoneAllIcon fontSize=\"large\" />\n              </IconButton>\n              <Typography variant=\"h5\" align=\"left\">\n                MyPlanner\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <br></br>\n          <br></br>\n          <br></br>\n        </div>\n      );\n    }\n\n    return <div>{headerLinks}</div>;\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (\n  project,\n  closeDialog,\n  history\n) => async dispatch => {\n  try {\n    console.log(project);\n    await axios.post(\"/api/project\", project);\n    closeDialog();\n    history.push(\"/dashboard\");\n    window.location.reload();\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  const res = await axios.get(`/api/project/${id}`);\n  dispatch({\n    type: GET_PROJECT,\n    payload: res.data\n  });\n};\n\nexport const deleteProject = id => async dispatch => {\n  await axios.delete(`/api/project/${id}`);\n  dispatch({\n    type: DELETE_PROJECT,\n    payload: id\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\nimport withConfirm from \"material-ui-confirm\";\n\nconst classes = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  }\n}));\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project, onOpenUpdate } = this.props;\n    return (\n      <React.Fragment>\n        <Paper className={classes.paper}>\n          <Grid container spacing={3} alignItems=\"center\">\n            <Grid item xs>\n              <Typography variant=\"caption\" align=\"center\">\n                {project.projectIdentifier}\n              </Typography>\n            </Grid>\n            <Grid item md>\n              <Typography variant=\"h5\" inline=\"true\" align=\"left\">\n                {project.projectName}\n              </Typography>\n              <Typography variant=\"body2\" inline=\"true\" align=\"left\">\n                {project.description}\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                className={classes.root}\n              >\n                <ListItem\n                  button\n                  component={Link}\n                  to={`/projectBoard/${project.projectIdentifier}`}\n                >\n                  <ListItemIcon>\n                    <DashboardIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Project Board\" />\n                </ListItem>\n                <ListItem\n                  button\n                  onClick={() => onOpenUpdate(project.projectIdentifier)}\n                >\n                  <ListItemIcon>\n                    <CreateIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Update Project\" />\n                </ListItem>\n                <ListItem\n                  button\n                  onClick={this.props.confirm(\n                    this.onDeleteClick.bind(this, project.projectIdentifier),\n                    {\n                      description: `Project \"${project.projectName}\" will be permanently deleted.`\n                    }\n                  )}\n                >\n                  <ListItemIcon>\n                    <DeleteForeverIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Delete Project\" />\n                </ListItem>\n              </List>\n            </Grid>\n          </Grid>\n        </Paper>\n      </React.Fragment>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default withConfirm(connect(null, { deleteProject })(ProjectItem));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectId: \"\",\n      description: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      errors: {}\n    };\n\n    this.startDateChange = this.startDateChange.bind(this);\n    this.endDateChange = this.endDateChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  startDateChange = date => {\n    this.setState({ startDate: date });\n  };\n\n  endDateChange = date => {\n    this.setState({ endDate: date });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectId,\n      description: this.state.description,\n      start_date: this.state.startDate,\n      end_date: this.state.endDate\n    };\n    // history props only exists in component who is routered\n    // this.props.createProject(newProject, this.props.history);\n    this.props.createProject(\n      newProject,\n      this.props.onCloseDialog,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          {/* <Box component=\"div\" display=\"inline\" p={1} m={1}>\n            <Typography variant=\"h5\" gutterBottom pt={5}>\n              Create a New Project\n            </Typography>\n          </Box> */}\n          <form className={classes.form} onSubmit={this.onSubmit}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                    name=\"projectName\"\n                    id=\"projectName\"\n                    label=\"Project Name\"\n                    autoFocus\n                    autoComplete=\"pname\"\n                    error={errors.projectName != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.projectName}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={this.state.projectId}\n                    onChange={this.onChange}\n                    name=\"projectId\"\n                    id=\"projectId\"\n                    label=\"Project ID\"\n                    autoComplete=\"id\"\n                    error={errors.projectIdentifier != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.projectIdentifier}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows=\"4\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                    name=\"description\"\n                    id=\"description\"\n                    label=\"Project Description\"\n                    autoComplete=\"description\"\n                    error={errors.description != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.description}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    label=\"Start Date\"\n                    value={this.state.startDate}\n                    onChange={this.startDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    label=\"Estimated End Date\"\n                    value={this.state.endDate}\n                    onChange={this.endDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"flex-end\"\n                className={classes.submit}\n              >\n                CREATE PROJECT\n              </Button>\n              <br />\n              <br />\n            </MuiPickersUtilsProvider>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStoreToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStoreToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: new Date(),\n      end_date: new Date(),\n      errors: {}\n    };\n\n    this.startDateChange = this.startDateChange.bind(this);\n    this.endDateChange = this.endDateChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getProject(this.props.targetId, this.props.history);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  startDateChange = date => {\n    this.setState({ start_date: date });\n  };\n\n  endDateChange = date => {\n    this.setState({ end_date: date });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    // history props only exists in component who is routered\n    // this.props.createProject(newProject, this.props.history);\n    this.props.createProject(\n      updateProject,\n      this.props.onCloseDialog,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n    // var target;\n    // this.props.projects.map(project => {\n    //   if (project.id === this.props.targetId) {\n    //     target = project;\n    //   }\n    // });\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form className={classes.form} onSubmit={this.onSubmit}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                    name=\"projectName\"\n                    id=\"projectName\"\n                    label=\"Project Name\"\n                    autoFocus\n                    autoComplete=\"pname\"\n                    error={errors.projectName != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.projectName}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    name=\"projectIdentifier\"\n                    id=\"projectIdentifier\"\n                    label=\"Project ID\"\n                    autoComplete=\"id\"\n                    disabled\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows=\"4\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                    name=\"description\"\n                    id=\"description\"\n                    label=\"Project Description\"\n                    autoComplete=\"description\"\n                    error={errors.description != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.description}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"start_date\"\n                    id=\"start_date\"\n                    label=\"Start Time\"\n                    value={this.state.start_date}\n                    onChange={this.startDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"end_date\"\n                    id=\"end_date\"\n                    label=\"End Time\"\n                    value={this.state.end_date}\n                    onChange={this.endDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"flex-end\"\n                className={classes.submit}\n              >\n                UPDATE PROJECT\n              </Button>\n              <br />\n              <br />\n            </MuiPickersUtilsProvider>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./layout/Header\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddProject from \"./project/AddProject\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport UpdateProject from \"./project/UpdateProjects\";\n\nconst classes = makeStyles(theme => ({\n  container: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openCreate: false,\n      openUpdate: false,\n      updateId: \"\"\n    };\n\n    this.handleCreateOpen = this.handleCreateOpen.bind(this);\n    this.handleCreateClose = this.handleCreateClose.bind(this);\n    this.handleUpdateOpen = this.handleUpdateOpen.bind(this);\n    this.handleUpdateClose = this.handleUpdateClose.bind(this);\n  }\n\n  handleCreateOpen = () => {\n    this.setState({ openCreate: true });\n  };\n\n  handleCreateClose = () => {\n    this.setState({ openCreate: false });\n  };\n\n  handleUpdateOpen = id => {\n    this.setState({ updateId: id });\n    this.setState({ openUpdate: true });\n  };\n\n  handleUpdateClose = () => {\n    this.setState({ openUpdate: false });\n  };\n\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div>\n        <Header title=\"Dashboard\" />\n        <Container maxWidth=\"md\" className={classes.container}>\n          <Grid justify=\"space-between\" container spacing={3}>\n            <Box\n              component=\"div\"\n              display=\"inline\"\n              p={5}\n              m={0}\n              bgcolor=\"background.paper\"\n            >\n              <Typography variant=\"h4\">Project Overview</Typography>\n            </Box>\n            <Box\n              component=\"div\"\n              display=\"inline\"\n              p={5}\n              m={0}\n              bgcolor=\"background.paper\"\n            >\n              <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                onClick={this.handleCreateOpen}\n              >\n                <AddIcon />\n              </Fab>\n            </Box>\n            {projects.map(project => (\n              <Grid item xs={12}>\n                <ProjectItem\n                  key={project.id}\n                  project={project}\n                  onOpenUpdate={this.handleUpdateOpen}\n                />\n                <br />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n        <Dialog\n          open={this.state.openCreate}\n          onClose={this.handleCreateClose}\n          aria-labelledby=\"create-project\"\n        >\n          <DialogTitle id=\"create-project\">Create a New Project</DialogTitle>\n          <DialogContent>\n            <AddProject\n              onCloseDialog={this.handleCreateClose}\n              history={this.props.history}\n            />\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={this.state.openUpdate}\n          onClose={this.handleUpdateClose}\n          aria-labelledby=\"update-project\"\n        >\n          <DialogTitle id=\"update-project\">Edit/Update a Project</DialogTitle>\n          <DialogContent>\n            <UpdateProject\n              onCloseDialog={this.handleUpdateClose}\n              history={this.props.history}\n              targetId={this.state.updateId}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      priority: 0,\n      status: \"\",\n      dueDate: new Date(),\n      projectIdentifier: this.props.projectIdentifier,\n      errors: {}\n    };\n\n    this.dueDateChange = this.dueDateChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  dueDateChange = date => {\n    this.setState({ dueDate: date });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      priority: this.state.priority,\n      status: this.state.status,\n      dueDate: this.state.dueDate\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.onCloseDialog,\n      this.props.history\n    );\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form className={classes.form} onSubmit={this.onSubmit}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows=\"2\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                    name=\"summary\"\n                    id=\"summary\"\n                    label=\"Project Task Summary\"\n                    error={errors.summary != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.summary}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    multiline\n                    rows=\"4\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                    name=\"acceptanceCriteria\"\n                    id=\"acceptanceCriteria\"\n                    label=\"Acceptance Criteria\"\n                    error={errors.acceptanceCriteria != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.acceptanceCriteria}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel shrink id=\"priority_label\">\n                      Priority\n                    </InputLabel>\n                    <Select\n                      labelId=\"priority_label\"\n                      id=\"priority\"\n                      name=\"priority\"\n                      value={this.state.priority}\n                      onChange={this.onChange}\n                      displayEmpty\n                      className={classes.selectEmpty}\n                    >\n                      <MenuItem value={0}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={1}>High</MenuItem>\n                      <MenuItem value={2}>Medium</MenuItem>\n                      <MenuItem value={3}>Low</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel shrink id=\"status_label\">\n                      Status\n                    </InputLabel>\n                    <Select\n                      labelId=\"status_label\"\n                      id=\"status\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                      displayEmpty\n                      className={classes.selectEmpty}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value=\"TO_DO\">TO DO</MenuItem>\n                      <MenuItem value=\"IN_PROGRESS\">IN PROGRESS</MenuItem>\n                      <MenuItem value=\"DONE\">COMPLETED</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"dueDate\"\n                    id=\"dueDate\"\n                    label=\"Due Date\"\n                    value={this.state.dueDate}\n                    onChange={this.dueDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"flex-end\"\n                className={classes.submit}\n              >\n                CREATE TASK\n              </Button>\n              <br />\n              <br />\n            </MuiPickersUtilsProvider>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  closeDialog,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    closeDialog();\n    history.push(`/projectBoard/${backlog_id}`);\n    window.location.reload();\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history,\n  closeDialog\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    closeDialog();\n    history.push(`/projectBoard/${backlog_id}`);\n    window.location.reload();\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n  dispatch({\n    type: DELETE_PROJECT_TASK,\n    payload: pt_id\n  });\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n\n    this.dueDateChange = this.dueDateChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getProjectTask(\n      this.props.projectIdentifier,\n      this.props.targetId,\n      this.props.history\n    );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  dueDateChange = date => {\n    this.setState({ dueDate: date });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history,\n      this.props.onCloseDialog\n    );\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form className={classes.form} onSubmit={this.onSubmit}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    multiline\n                    rows=\"2\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                    name=\"summary\"\n                    id=\"summary\"\n                    label=\"Project Task Summary\"\n                    error={errors.summary != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.summary}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    multiline\n                    rows=\"4\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                    name=\"acceptanceCriteria\"\n                    id=\"acceptanceCriteria\"\n                    label=\"Acceptance Criteria\"\n                    error={errors.acceptanceCriteria != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.acceptanceCriteria}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel shrink id=\"priority_label\">\n                      Priority\n                    </InputLabel>\n                    <Select\n                      labelId=\"priority_label\"\n                      id=\"priority\"\n                      name=\"priority\"\n                      value={this.state.priority}\n                      onChange={this.onChange}\n                      displayEmpty\n                      className={classes.selectEmpty}\n                    >\n                      <MenuItem value={0}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={1}>High</MenuItem>\n                      <MenuItem value={2}>Medium</MenuItem>\n                      <MenuItem value={3}>Low</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel shrink id=\"status_label\">\n                      Status\n                    </InputLabel>\n                    <Select\n                      labelId=\"status_label\"\n                      id=\"status\"\n                      name=\"status\"\n                      value={this.state.status}\n                      onChange={this.onChange}\n                      displayEmpty\n                      className={classes.selectEmpty}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value=\"TO_DO\">TO DO</MenuItem>\n                      <MenuItem value=\"IN_PROGRESS\">IN PROGRESS</MenuItem>\n                      <MenuItem value=\"DONE\">COMPLETED</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <KeyboardDatePicker\n                    variant=\"outlined\"\n                    required\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    name=\"dueDate\"\n                    id=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.dueDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              <br />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"flex-end\"\n                className={classes.submit}\n              >\n                UPDATE TASK\n              </Button>\n              <br />\n              <br />\n            </MuiPickersUtilsProvider>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport withConfirm from \"material-ui-confirm\";\n\nconst classes = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nclass ProjectTaskItem extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      expanded: false\n    };\n    this.handleExpandClick = this.handleExpandClick.bind(this);\n  }\n\n  handleExpandClick() {\n    this.setState({ expanded: !this.state.expanded });\n  }\n\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString = \"\";\n    let headerColor = \"\";\n    if (project_task.priority === 1) {\n      priorityString = \"High\";\n      headerColor = \"red\";\n    } else if (project_task.priority === 2) {\n      priorityString = \"Medium\";\n      headerColor = \"orange\";\n    } else {\n      priorityString = \"Low\";\n      headerColor = \"green\";\n    }\n\n    const styles = {\n      cardHeader: {\n        background: headerColor,\n        color: \"white\"\n      }\n    };\n    return (\n      <div>\n        <Card className={classes.card}>\n          <CardHeader\n            title={\"ID: \" + project_task.projectSequence}\n            style={styles.cardHeader}\n            titleTypographyProps={{ variant: \"subtitle2\", color: \"inherit\" }}\n            subheader={\"Priority: \" + priorityString}\n            subheaderTypographyProps={{\n              variant: \"subtitle2\",\n              color: \"inherit\"\n            }}\n          />\n          <CardContent>\n            <Typography variant=\"h6\" inline=\"true\" align=\"left\">\n              {project_task.summary}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              inline=\"true\"\n              align=\"left\"\n            >\n              {project_task.acceptanceCriteria}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\">\n              <CreateIcon\n                onClick={() =>\n                  this.props.onOpenUpdate(project_task.projectSequence)\n                }\n              />\n            </IconButton>\n            <IconButton aria-label=\"share\">\n              <DeleteForeverIcon\n                onClick={this.props.confirm(\n                  this.onDeleteClick.bind(\n                    this,\n                    project_task.projectIdentifier,\n                    project_task.projectSequence\n                  ),\n                  {\n                    description: `Project Task \"${project_task.projectSequence}\" will be permanently deleted.`\n                  }\n                )}\n              />\n            </IconButton>\n            <IconButton\n              className={clsx(classes.expand, {\n                [classes.expandOpen]: this.state.expanded\n              })}\n              onClick={this.handleExpandClick}\n              aria-expanded={this.state.expanded}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          </CardActions>\n          <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography paragraph>Method:</Typography>\n              <Typography paragraph>\n                Heat 1/2 cup of the broth in a pot until simmering, add saffron\n                and set aside for 10 minutes.\n              </Typography>\n              <Typography paragraph>\n                Heat oil in a (14- to 16-inch) paella pan or a large, deep\n                skillet over medium-high heat. Add chicken, shrimp and chorizo,\n                and cook, stirring occasionally until lightly browned, 6 to 8\n                minutes. Transfer shrimp to a large plate and set aside, leaving\n                chicken and chorizo in the pan. Add pimentón, bay leaves,\n                garlic, tomatoes, onion, salt and pepper, and cook, stirring\n                often until thickened and fragrant, about 10 minutes. Add\n                saffron broth and remaining 4 1/2 cups chicken broth; bring to a\n                boil.\n              </Typography>\n              <Typography paragraph>\n                Add rice and stir very gently to distribute. Top with artichokes\n                and peppers, and cook without stirring, until most of the liquid\n                is absorbed, 15 to 18 minutes. Reduce heat to medium-low, add\n                reserved shrimp and mussels, tucking them down into the rice,\n                and cook again without stirring, until mussels have opened and\n                rice is just tender, 5 to 7 minutes more. (Discard any mussels\n                that don’t open.)\n              </Typography>\n              <Typography>\n                Set aside off of the heat to let rest for 10 minutes, and then\n                serve.\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n        <br />\n      </div>\n    );\n  }\n}\n\nProjectTaskItem.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default withConfirm(\n  connect(null, { deleteProjectTask })(ProjectTaskItem)\n);\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport ProjectTaskItem from \"./projectTasks/ProjectTaskItem\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks, onOpenUpdate } = this.props;\n    const tasks = project_tasks.map(project_task => (\n      <ProjectTaskItem\n        key={project_task.id}\n        project_task={project_task}\n        onOpenUpdate={onOpenUpdate}\n      />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <Grid container spacing={3}>\n        <Grid item md={4}>\n          <Paper elevation={0}>\n            <Box bgcolor=\"text.secondary\" color=\"background.paper\" p={2}>\n              <Typography>TO DO</Typography>\n            </Box>\n            <br />\n            {todoItems}\n            {}\n          </Paper>\n        </Grid>\n\n        <Grid item md={4}>\n          <Paper elevation={0}>\n            <Box\n              bgcolor=\"info.main\"\n              color=\"info.contrastText\"\n              fontWeight=\"fontWeightBold\"\n              p={2}\n            >\n              <Typography>IN PROGRESS</Typography>\n            </Box>\n            <br />\n            {inProgressItems}\n            {}\n          </Paper>\n        </Grid>\n\n        <Grid item md={4}>\n          <Paper elevation={0}>\n            <Box\n              bgcolor=\"success.main\"\n              color=\"success.contrastText\"\n              fontWeight=\"fontWeightBold\"\n              p={2}\n            >\n              <Typography>COMPLETED</Typography>\n            </Box>\n            <br />\n            {doneItems}\n            {}\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"../layout/Header\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport AddProjectTask from \"./projectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./projectTasks/UpdateProjectTask\";\nimport Backlog from \"./Backlog\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst classes = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  container: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      openCreate: false,\n      openUpdate: false,\n      updateId: \"\",\n      errors: {}\n    };\n\n    this.handleCreateOpen = this.handleCreateOpen.bind(this);\n    this.handleCreateClose = this.handleCreateClose.bind(this);\n    this.handleUpdateOpen = this.handleUpdateOpen.bind(this);\n    this.handleUpdateClose = this.handleUpdateClose.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleCreateOpen = () => {\n    this.setState({ openCreate: true });\n  };\n\n  handleCreateClose = () => {\n    this.setState({ openCreate: false });\n  };\n\n  handleUpdateOpen = id => {\n    this.setState({ updateId: id });\n    this.setState({ openUpdate: true });\n  };\n\n  handleUpdateClose = () => {\n    this.setState({ openUpdate: false });\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <Alert variant=\"filled\" severity=\"error\">\n              {errors.projectNotFound}\n            </Alert>\n          );\n        } else {\n          return (\n            <Container maxWidth=\"lg\" className={classes.container}>\n              <Grid justify=\"space-between\" container spacing={3}>\n                <Box\n                  component=\"div\"\n                  display=\"inline\"\n                  p={5}\n                  m={0}\n                  bgcolor=\"background.paper\"\n                >\n                  <Typography variant=\"h4\">Project Tasks</Typography>\n                </Box>\n                <Box\n                  component=\"div\"\n                  display=\"inline\"\n                  p={5}\n                  m={0}\n                  bgcolor=\"background.paper\"\n                >\n                  <Fab\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={this.handleCreateOpen}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </Box>\n              </Grid>\n              <br />\n              <Alert variant=\"filled\" severity=\"info\">\n                No Project Tasks on this board\n              </Alert>\n              <br />\n              <Backlog\n                project_tasks={project_tasks}\n                onOpenUpdate={this.handleUpdateOpen}\n              />\n            </Container>\n          );\n        }\n      } else {\n        return (\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid justify=\"space-between\" container spacing={3}>\n              <Box\n                component=\"div\"\n                display=\"inline\"\n                p={5}\n                m={0}\n                bgcolor=\"background.paper\"\n              >\n                <Typography variant=\"h4\">Project Tasks</Typography>\n              </Box>\n              <Box\n                component=\"div\"\n                display=\"inline\"\n                p={5}\n                m={0}\n                bgcolor=\"background.paper\"\n              >\n                <Fab\n                  color=\"primary\"\n                  aria-label=\"add\"\n                  onClick={this.handleCreateOpen}\n                >\n                  <AddIcon />\n                </Fab>\n              </Box>\n            </Grid>\n            <Backlog\n              project_tasks={project_tasks}\n              onOpenUpdate={this.handleUpdateOpen}\n            />\n          </Container>\n        );\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className={classes.root}>\n        <Header title=\"Project Board\" />\n        {BoardContent}\n        <Dialog\n          open={this.state.openCreate}\n          onClose={this.handleCreateClose}\n          aria-labelledby=\"create-task\"\n        >\n          <DialogTitle id=\"create-task\">Create a New Task</DialogTitle>\n          <DialogContent>\n            <AddProjectTask\n              onCloseDialog={this.handleCreateClose}\n              history={this.props.history}\n              projectIdentifier={id}\n            />\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          open={this.state.openUpdate}\n          onClose={this.handleUpdateClose}\n          aria-labelledby=\"update-task\"\n        >\n          <DialogTitle id=\"update-task\">Edit/Update a Project</DialogTitle>\n          <DialogContent>\n            <UpdateProjectTask\n              onCloseDialog={this.handleUpdateClose}\n              history={this.props.history}\n              projectIdentifier={id}\n              targetId={this.state.updateId}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"./Header\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Website Made by Yue Sun\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst classes = makeStyles(theme => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nclass Landing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className={classes.root}>\n        <Header />\n        <Container component=\"main\" maxWidth=\"xs\">\n          <LockOutlinedIcon />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={this.onSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              label=\"Email Address\"\n              name=\"username\"\n              autoComplete=\"email\"\n              value={this.state.username}\n              onChange={this.onChange}\n              error={errors.username != null}\n              autoFocus\n            />\n            <Typography variant=\"caption\" color=\"error\">\n              {errors.username}\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              value={this.state.password}\n              onChange={this.onChange}\n              error={errors.password != null}\n            />\n            <Typography variant=\"caption\" color=\"error\">\n              {errors.password}\n            </Typography>\n            <br></br>\n            <br></br>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <br></br>\n            <br></br>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Landing);\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"../layout/Header\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Website Made by Yue Sun\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <Header />\n        <Container component=\"main\" maxWidth=\"xs\">\n          <div className={classes.paper}>\n            <LockOutlinedIcon />\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <br></br>\n            <form className={classes.form} onSubmit={this.onSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    name=\"fullName\"\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Full Name\"\n                    autoFocus\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                    error={errors.fullName != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.fullName}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Email Address\"\n                    name=\"username\"\n                    autoComplete=\"email\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    error={errors.username != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.username}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                    error={errors.password != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.password}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                    error={errors.confirmPassword != null}\n                  />\n                  <Typography variant=\"caption\" color=\"error\">\n                    {errors.confirmPassword}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}></Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Sign Up\n              </Button>\n              <br></br>\n              <br></br>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport Landing from \"./components/layout/Landing\";\nimport SignUp from \"./components/user/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  // store.dispatch({\n  //   type: SET_CURRENT_USER,\n  //   payload: decoded_jwtToken\n  // });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            {\n              //Public Route\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={SignUp} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}